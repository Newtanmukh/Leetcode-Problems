class Solution {
public:
    vector<int>p;
    TreeNode* helper(int low,int high)
    {
        if(low<=high){
            int mid=low+(high-low)/2;
            
            TreeNode* newnode=new TreeNode(p[mid]);
            newnode->left=helper(low,mid-1);
            newnode->right=helper(mid+1,high);
            
            return newnode;
        }
        
        return NULL;
    }
    
    void inorder(TreeNode* root)
    {
        if(!root)
            return;
        inorder(root->left);
        p.push_back(root->val);
        inorder(root->right);
    }
    
    TreeNode* balanceBST(TreeNode* root) {
        inorder(root);
        
        return helper(0,p.size()-1);
        
    }
};