class Solution {
public:
    int sum=0;
  
    int deepestLeavesSum(TreeNode* root) {
    if(!root)
        return 0;
        
        queue<TreeNode*> q;
        q.push(root);
        
        vector<vector<int>>ans;
        
        TreeNode* node;
        int i,size;
        while(!q.empty())
        {
            size=q.size();
            vector<int>level;
            for(i=0;i<size;i++)
            {
                node=q.front();
                q.pop();
                if(node->left)
                    q.push(node->left);
                if(node->right)
                    q.push(node->right);
                
                level.push_back(node->val);
            }
            
            ans.push_back(level);
            
            
        }
        
        for(auto val:ans[ans.size()-1])
            sum+=val;
        
        return sum;
        
        
        
    }
};