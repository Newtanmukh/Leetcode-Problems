#include <bits/stdc++.h>

#include <iostream>

using namespace std;

 int SearchFirstOccurence(vector<int>& nums, int target) {
      int res=-1;
              int low=0;
              int high=nums.size()-1;
              
        
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            
            if(nums[mid]==target)
            {res=mid;
                high=mid-1;
            }
            else if(nums[mid]>target)
            {
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
            
        
              
        return res;
    }

int SearchLastOccurence(vector<int>& nums, int target) {
      int res=-1;
              int low=0;
              int high=nums.size()-1;
              
        
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            
            if(nums[mid]==target)
            {res=mid;
                low=mid+1;
            }
            else if(nums[mid]>target)
            {
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
            
        
              
        return res;
    }

int main()
{
    
    vector<int> p = {-11,-7,-4,-2,-1,-1,-1,-1,0,3,5,9,12,24,25,29,31,37};
   // vector<int> p = {45,31,29,25,24,12,9,5,3,0,-1,-4,-9,-15,-18,-23};
    int target=-1;
    
    int index=SearchFirstOccurence(p, target);
    int i=SearchLastOccurence(p,target);
    cout<<"First Index is : "<<index<<endl;
    cout<<"Last Index is : "<<i<<endl;
    cout<<"The number of times -1 occurs here is : "<<i-index+1<<endl;
    return 0;
}
