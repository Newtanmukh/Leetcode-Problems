class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
       unordered_set<char> s;
        
        // checking rowwise
        for (int row=0;row<9; row++){ 
            s.clear();
            for (int column=0;column<9;column++){
                if (board[row][column]!='.'){
                    if (s.count(board[row][column]))
                        return false;
                    else
                        s.insert(board[row][column]);
                }
            }
        }
        
        // checking columnwise
        for (int column=0;column<9;column++){
            s.clear();
            for (int row=0;row<9;row++){
                if (board[row][column]!='.'){
                    if (s.count(board[row][column]))
                        return false;
                    else
                        s.insert(board[row][column]);
                }
            }
        }
        
        // checking in 3X3 blocks (we're moving top to bottom (tower i=0->9), and the next `c` value moves us to the next tower)
        for (int c=0;c<9;c+=3){
            for (int i=0;i<9;i++){
                if (i%3==0)
                    s.clear();
                for (int j=c;j<c+3;j++){
                    if (board[i][j]!='.'){
                        if (s.count(board[i][j]))
                            return false;
                        else
                            s.insert(board[i][j]);
                    }
                }
            }
        }
        
        return true; 
    }
};