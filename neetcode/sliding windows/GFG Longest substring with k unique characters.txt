class Solution{
  public:
    int longestKSubstr(string s, int k) {
    int i=0;
    int j=0;
    int ans=-1;
    unordered_map<char,int>mapper;
    
    while(j<s.length())
    {
        mapper[s[j]]++;
        
        if(mapper.size()>k)//mapper.size() will basically return the number of keys that we have inside this map.
        {
            
        while(mapper.size()>k)
        {
            mapper[s[i]]--;
            if(mapper[s[i]]==0)
            {
                mapper.erase(s[i]);//we need to erase this, otherwise this will be considered as a key as well.

            }
            i++;
        }
        
        }
        
        if(mapper.size()==k)
        {
            ans=max(ans,j-i+1);
        }
        
        j++;
   
    }
    return ans;
    
    }
};