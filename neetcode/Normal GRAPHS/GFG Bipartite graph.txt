//check if bipartite or not.

bool checkbfs(int node,vector<bool>&visited,vector<int>&color,vector<int>adj[])
    {
        visited[node]=true;
        color[node]=0;
        queue<int>q;
        q.push(node);
        
        while(!q.empty())
        {
            int parent=q.front();
            q.pop();
            
            for(int child:adj[parent])
            {
                if(visited[child]==false)
                {
                    visited[child]=true;
                    color[child]=1-color[parent];
                    q.push(child);
                }
                
                if(color[child]==color[parent])
                return false;
            }
            
        }
        
        return true;
        
    }
    
	bool isBipartite(int V, vector<int>adj[]){
	   
	   vector<bool>visited(V,false);
	   vector<int>color(V,-1);
	   
	   for(int i=0;i<V;i++)
	   {
	       if(visited[i]==false)
	       {
	           if(checkbfs(i,visited,color,adj)==false)
	           return false;
	           
	       }
	   }
	   return true;
	}