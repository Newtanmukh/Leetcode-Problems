
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL)  
          return NULL;
        if(root->val>p->val and root->val>q->val)
           return lowestCommonAncestor(root->left,p,q);
        if(root->val<p->val and root->val<q->val)
            return lowestCommonAncestor(root->right,p,q);
        //incase if the root is one of p or q itself or, root is in a position such that it is between the values of p and q.
        return root;
    }
};