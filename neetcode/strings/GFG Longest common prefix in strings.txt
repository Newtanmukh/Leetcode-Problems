 string longestCommonPrefix (string arr[], int N)
    {
        if(N==0)
        return "";
        
        string res="";
       vector<string>s;
       for(int i=0;i<N;i++)
       {
           s.push_back(arr[i]);
       }
       
      sort(s.begin(),s.end());//sort on basis of the size of string.
      
      string first=s[0];
      string last=s[N-1];
      int limit = min(first.length(), last.length());
      for(int i = 0; i < limit; i++) {// find out the longest common prefix between first and last word
            if(first[i] == last[i]) {
                res += first[i];
            }    
            else {
                break;
            }
        }
        if(res=="")
        return "-1";
        return res;
       
    }

















###########################################################################################

 string longestCommonPrefix (string arr[], int N)
    {
      if(N==0)
      return "";
      
      string ans=arr[0];
      
      for(int i=1;i<N;i++)
      {
          int j;
          for(j=0;j<ans.size();j++)
          {
              if(ans[j]!=arr[i][j])
              break;
          }
          ans=ans.substr(0,j);
          if(ans=="")
          return "-1";
      }
      return ans;
       
    }