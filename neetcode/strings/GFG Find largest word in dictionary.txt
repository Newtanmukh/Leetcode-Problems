 bool is_subsequence(string s,string t)
   {
       //we are checking here that whether s is a substring of t or not.
       int n=s.length();
       int m=t.length();
       
       int i=0;
       int j=0;
       
       while(i<m and j<m)
       {
           if(s[i]==t[j])
           {
               i++;
               j++;
           }
           else
           {
               j++;
           }
       }
       
       return i==n;
       
   }
 
 
 
   string findLongestWord(string S, vector<string> d) 
   {
       //sort(d.begin(),d.end());//lexographically smallest,so sort this vector of strings. or u can just compare the strings instead itself.
       int len=INT_MIN;
       
       string res="";
       for(int i=0;i<d.size();i++)
       {
           if(is_subsequence(d[i],S))
           {
               if(res.size()<d[i].size())
               {
                   res=d[i];
               }
               else if(res.size()==d[i].size())
               {
                   if(d[i]<res)
                   {
                       res=d[i];
                   }
               }
           }
           
       }
       
       return res;
      
    }