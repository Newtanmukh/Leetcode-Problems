class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) 
    {
        int n = cost.size();
        vector<int>dp(n);
       //here , dp[i] means that like, the ,minimum cost that we hae incured while reaching upto the position i and have also paid the price for it, now we have to do the next. 
        dp[0] = cost[0];
        dp[1] = cost[1];
        
        for(int i=2; i<n; i++)
        {
            dp[i] = cost[i] + min(dp[i-1], dp[i-2]);
        }
        
        return min(dp[n-1], dp[n-2]);  //either he is on the last step and has already paid for it and now one more, he will be out, or he can be on the second last and has already paid and by now taking two more steps,he will be out.
    }
};