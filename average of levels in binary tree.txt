class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> returnvector;

        if(!root)
            return returnvector;
        vector<vector<int>> ans;
        
        queue<TreeNode*> q;
        q.push(root);
        int i;
        while(!q.empty())
        {
            int size=q.size();
            vector<int> level;
            for(i=0;i<size;i++)
            {
                TreeNode* node=q.front();
                q.pop();
                if(node->left)
                { q.push(node->left);}
                 if(node->right)
                 {q.push(node->right);}
                level.push_back(node->val);
            }
            ans.push_back(level);
        }
        
        for(auto vec:ans)
        {
            double sum=0;
            int count=0;
            for(auto val:vec)
            {sum+=val;
            count++;}
            returnvector.push_back(sum/count);
        }
        return returnvector;
        
        
    }
};